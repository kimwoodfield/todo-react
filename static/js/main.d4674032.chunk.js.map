{"version":3,"sources":["components/TodoForm/TodoForm.jsx","components/Todo/Todo.jsx","components/TodoContainer/TodoContainer.jsx","App.js","index.js"],"names":["TodoForm","props","useState","todo","setTodo","onSubmit","event","preventDefault","newTodo","id","Math","floor","random","title","date","Date","now","isComplete","onTodoChange","style","width","maxWidth","Paper","sx","p","display","alignItems","marginBottom","InputBase","ml","flex","type","value","onChange","target","inputProps","placeholder","IconButton","fontSize","Todo","isEditing","setIsEditing","renamedTodo","setRenamedTodo","todoComplete","setTodoComplete","toggleCompletedTodo","onCompletedTodo","item","ListItem","OutlinedInput","e","endAdornment","InputAdornment","position","onClick","onEditTodo","edge","backgroundColor","fontStyle","textDecoration","margin","borderRadius","height","ListItemText","ListItemIcon","minWidth","size","onRemoveTodo","padding","TodoContainer","completeTodo","onComplete","removeTodo","onDelete","editTodo","onRename","items","justifyContent","List","map","App","tasks","setTasks","sortTodos","todos","slice","sort","a","b","className","Box","flexDirection","Typography","variant","component","gutterBottom","textAlign","fontWeight","previousState","newTodos","find","updatedTodos","filter","foundTodo","sorted","currentTodos","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4674032.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { InputBase } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport { Paper } from '@mui/material';\r\n\r\nfunction TodoForm(props) {\r\n    const [ todo, setTodo ] = useState('');\r\n\r\n    const handleTodoChange = (event) => {\r\n        setTodo(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!todo) {\r\n            return;\r\n        }\r\n\r\n        let newTodo = {\r\n            id: Math.floor(Math.random() * 1000000),\r\n            title: todo,\r\n            date: Date.now(),\r\n            isComplete: false,\r\n        }\r\n\r\n        props.onTodoChange(newTodo);\r\n        setTodo('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} style={{width: '90%', maxWidth: '525px'}}>\r\n                <Paper\r\n                sx={{ p: '8px 4px', display: 'flex', alignItems: 'center', width: '100%', marginBottom: '20px' }}\r\n                >\r\n                    <InputBase\r\n                        sx={{ ml: 1, flex: 1 }}\r\n                        type=\"text\" \r\n                        value={todo} \r\n                        onChange={handleTodoChange} \r\n                        inputProps={{ 'aria-label': 'add todos' }}\r\n                        placeholder=\"What's on today?\"\r\n                    />\r\n                    <IconButton type=\"submit\" aria-label=\"search\">\r\n                        <AddBoxIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                </Paper>\r\n            {/* <OutlinedInput\r\n                type=\"text\" \r\n                value={todo} \r\n                onChange={handleTodoChange} \r\n                sx={{ width:'100%' }}\r\n                endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                    color=\"primary\" aria-label=\"add\" size=\"large\" type='submit'\r\n                    edge=\"end\"\r\n                    >\r\n                        <AddBoxIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                </InputAdornment>\r\n                }\r\n                // label=\"Password\"\r\n            /> */}\r\n            {/* <Input \r\n                type=\"text\" \r\n                value={todo} \r\n                onChange={handleTodoChange} \r\n            />\r\n            <IconButton color=\"primary\" aria-label=\"add\" size=\"large\" type='submit'>\r\n                <AddBoxIcon fontSize=\"inherit\" />\r\n            </IconButton> */}\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { OutlinedInput } from '@mui/material';\r\nimport { InputAdornment } from '@mui/material';\r\n\r\nfunction Todo(props) {\r\n    const [ isEditing, setIsEditing ] = useState(false);\r\n    const [ renamedTodo, setRenamedTodo ] = useState('');\r\n    const [ todoComplete, setTodoComplete ] = useState(false);\r\n\r\n    const toggleCompletedTodo = () => {\r\n        setTodoComplete(!todoComplete);\r\n        props.onCompletedTodo(props.item.id);\r\n    }\r\n\r\n    const showEditInput = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const updateTodo = (e) => {\r\n        setRenamedTodo(e.target.value);\r\n    }\r\n\r\n    const saveTodo = () => {\r\n        if (!renamedTodo) {\r\n            return;\r\n        }\r\n        props.onEditTodo(renamedTodo, props.item.id);\r\n        setIsEditing(false);\r\n        setRenamedTodo('');\r\n    }\r\n\r\n    const removeTodo = () => {\r\n        props.onRemoveTodo(props.item.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n                {\r\n                    isEditing ? (\r\n                        <ListItem>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                value={renamedTodo}\r\n                                onChange={updateTodo}\r\n                                placeholder={props.item.title}\r\n                                sx={{ width:'100%' }}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={saveTodo}\r\n                                    edge=\"end\"\r\n                                    >\r\n                                        <CheckCircleIcon />\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    ) \r\n                    : \r\n                    (\r\n                        <ListItem sx={{\r\n                            backgroundColor: `${props.item.isComplete ? '#C8E6C9' : '#f0f0f0'}`,\r\n                            fontStyle: `${props.item.isComplete ? 'italic' : 'normal'}`,\r\n                            textDecoration: `${props.item.isComplete ? 'line-through' : 'none'}`,\r\n                            margin: '0 0 10px 0', \r\n                            borderRadius: 2,\r\n                            height: '50px',\r\n                            maxWidth: '525px'\r\n                        }}>\r\n                            <ListItemText> \r\n                                <span onClick={showEditInput}>{props.item.title}</span>\r\n                            </ListItemText>\r\n                            <ListItemIcon sx={{ minWidth: 0 }}>\r\n                                {\r\n                                    props.item.isComplete ? <CheckBoxIcon onClick={toggleCompletedTodo} /> : <CheckBoxOutlineBlankIcon onClick={toggleCompletedTodo} />\r\n                                }   \r\n                            </ListItemIcon>\r\n                            <IconButton aria-label=\"add\" size=\"large\" onClick={removeTodo} sx={{padding: '0 0 0 7px'}}><DeleteIcon fontSize=\"inherit\" /></IconButton>\r\n                        </ListItem>\r\n                    )\r\n                }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from '../Todo/Todo';\r\n\r\nimport List from '@mui/material/List';\r\n\r\n\r\nfunction TodoContainer(props) {\r\n\r\n    const completeTodo = (id) => {\r\n        props.onComplete(id);\r\n    }\r\n\r\n    const removeTodo = (todo) => {\r\n        props.onDelete(todo);\r\n    }\r\n\r\n    const editTodo = (todo, id) => {\r\n        props.onRename(todo, id);\r\n    }\r\n\r\n    if (props.items < 1) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '90%', display: 'flex', justifyContent: 'center', maxWidth: '525px' }}>\r\n            <List sx={{ width: '100%', maxWidth: '525px', padding: 0, margin: 0}}>\r\n                {\r\n                    props.items ? (\r\n                        props.items.map((todo) => {\r\n                                return (\r\n                                    <Todo item={todo} onRemoveTodo={removeTodo} onEditTodo={editTodo} onCompletedTodo={completeTodo} />\r\n                                )\r\n                        })\r\n                    ) : ''\r\n                }\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoContainer;","import React, { useState } from 'react';\nimport TodoForm from './components/TodoForm/TodoForm';\nimport TodoContainer from './components/TodoContainer/TodoContainer';\n\nimport { Box } from '@mui/system';\nimport Typography from '@mui/material/Typography';\n\nfunction App() {\n  const [ tasks, setTasks ] = useState([]);\n\n  const handleRemoveTodo = (id) => {\n    let newTodos = tasks.slice();\n    const foundTodo = newTodos.find(todo => id === todo.id);\n    if (!foundTodo) {\n      return;\n    }\n    const updatedTodos = newTodos.filter(todo => id !== todo.id);\n    setTasks(updatedTodos);\n  }\n\n  const handleCompletedTodo = (id) => {\n    let currentTodos = tasks.slice();\n    const foundTodo = currentTodos.find(todo => id === todo.id);\n    if (!foundTodo) {\n      return;\n    }\n    foundTodo.isComplete = !foundTodo.isComplete;\n\n    setTasks(currentTodos);\n\n    let sorted;\n    setTimeout(() => {\n      sorted = sortTodos(currentTodos);\n      setTasks(sorted);\n    }, 750);\n  }\n\n  const handleRenameTodo = (todo, id) => {\n    let newTodos = tasks.slice();\n    const foundTodo = newTodos.find(todo => id === todo.id);\n    if (!foundTodo) {\n      return;\n    }\n\n    foundTodo.title = todo;\n\n    setTasks(newTodos);\n  }\n\n  const todoChanged = (todo) => {\n    setTasks(previousState => {\n      return [ todo, ...previousState ];\n    });\n  }\n\n  const sortTodos = (todos) => {\n    let currentTodos = todos.slice();\n    const sorted = currentTodos.sort((a, b) => {\n      if (a.isComplete) return 1;\n      else return -1;\n    });\n    return sorted;\n  }\n\n  return (\n    <div className=\"App\">\n      <Box \n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%'\n        }}\n      >\n        <Typography \n          variant=\"h1\" \n          component=\"div\" \n          gutterBottom \n          sx={{\n            textAlign: 'center',\n            fontSize: 36,\n            fontWeight: 500,\n            padding: 2,\n          }}\n        >\n          todo-react.\n        </Typography>\n        <TodoForm onTodoChange={todoChanged} sx={{width: '100%'}} />\n        <TodoContainer \n          items={tasks} \n          onDelete={handleRemoveTodo} \n          onRename={handleRenameTodo} \n          onComplete={handleCompletedTodo}\n        />\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}